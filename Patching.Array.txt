class Solution {
public:
    int minPatches(vector<int>& nums, int n) {
  int len=nums.size();
        if(len==0)
        {
            vector<int>a=nums;
            a.push_back(1);
            return minPatches(a,n)+1;
        }
		if(nums[0]!=1)
		{
			vector<int>a;
			a.push_back(1);
			for(int i=0;i<len;i++)
				a.push_back(nums[i]);
			return minPatches(a,n)+1;
		}
        long long int nowsum=1;
		int index=1;
		int res=0;
		while(nowsum<n)
		{
			if(index<len&&nums[index]<=nowsum+1)
			{
				nowsum+=nums[index];
				index++;
			}else{ nowsum=nowsum*2+1;res++;}
		}
		return res;
    }
};